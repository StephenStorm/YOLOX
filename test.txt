['conv_3x3_1', 'conv_3x3_2', 'TBS1', 'TBS2', 'TBS3', 'TBS4', 'TBS5', 'TBS6', 'TBS7', 'TBS8', 'TBS9', 'TBS10', 'TBS11', 'TBS12', 'TBS13', 'TBS14', 'TBS15', 'TBS16']

YOLOX(
  (backbone): YOLOPAFPN(
    (backbone): FBNetV2(
      (layers): ModuleList(
        (0): ConvBlock(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (1): ConvBlock(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (2): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (3): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (4): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (5): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): ConvBlock(
              (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (final_act): ReLU(inplace=True)
          )
        )
        (6): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (7): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (8): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (9): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): ConvBlock(
              (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (final_act): ReLU(inplace=True)
          )
        )
        (10): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (11): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (12): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (13): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (14): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (se): SEModule(
              (squeeze): AdaptiveAvgPool2d(output_size=1)
              (excite): Sequential(
                (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): ReLU(inplace=True)
                (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (3): Sigmoid()
              )
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (15): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): ConvBlock(
              (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
              (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (final_act): ReLU(inplace=True)
          )
        )
        (16): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
        (17): MixedOp(
          (ops): FBNetV2Block(
            (conv_bn_relu1): ConvBlock(
              (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu2): ConvBlock(
              (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act): ReLU(inplace=True)
            )
            (conv_bn_relu3): ConvBlock(
              (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (downsample): Identity()
            (final_act): ReLU(inplace=True)
          )
        )
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode=nearest)
    (lateral_conv0): BaseConv(
      (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (reduce_conv1): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_p3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (bu_conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_n3): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
    (bu_conv1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (C3_n4): CSPLayer(
      (conv1): BaseConv(
        (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv3): BaseConv(
        (conv): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (m): Sequential(
        (0): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (1): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
        (2): Bottleneck(
          (conv1): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
          (conv2): BaseConv(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU(inplace=True)
          )
        )
      )
    )
  )
  (head): YOLOXHead(
    (cls_convs): ModuleList(
      (0): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
    (reg_convs): ModuleList(
      (0): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Sequential(
        (0): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (1): BaseConv(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
    )
    (obj_preds): ModuleList(
      (0): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): BaseConv(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): BaseConv(
        (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (l1_loss): L1Loss()
    (bcewithlog_loss): BCEWithLogitsLoss()
    (iou_loss): IOUloss()
  )
)
------------------------------
backbone
YOLOPAFPN(
  (backbone): FBNetV2(
    (layers): ModuleList(
      (0): ConvBlock(
        (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (1): ConvBlock(
        (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (2): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (3): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (4): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (5): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): ConvBlock(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (final_act): ReLU(inplace=True)
        )
      )
      (6): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (7): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (8): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (9): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): ConvBlock(
            (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (final_act): ReLU(inplace=True)
        )
      )
      (10): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (11): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (12): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (13): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (14): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (se): SEModule(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (excite): Sequential(
              (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): ReLU(inplace=True)
              (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (3): Sigmoid()
            )
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (15): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): ConvBlock(
            (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (final_act): ReLU(inplace=True)
        )
      )
      (16): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
      (17): MixedOp(
        (ops): FBNetV2Block(
          (conv_bn_relu1): ConvBlock(
            (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu2): ConvBlock(
            (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): ReLU(inplace=True)
          )
          (conv_bn_relu3): ConvBlock(
            (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (downsample): Identity()
          (final_act): ReLU(inplace=True)
        )
      )
    )
  )
  (upsample): Upsample(scale_factor=2.0, mode=nearest)
  (lateral_conv0): BaseConv(
    (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (C3_p4): CSPLayer(
    (conv1): BaseConv(
      (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv3): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (m): Sequential(
      (0): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
  )
  (reduce_conv1): BaseConv(
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (C3_p3): CSPLayer(
    (conv1): BaseConv(
      (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv3): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (m): Sequential(
      (0): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
  )
  (bu_conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (C3_n3): CSPLayer(
    (conv1): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv3): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (m): Sequential(
      (0): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
  )
  (bu_conv1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (C3_n4): CSPLayer(
    (conv1): BaseConv(
      (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv3): BaseConv(
      (conv): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (m): Sequential(
      (0): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (1): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
      (2): Bottleneck(
        (conv1): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
        (conv2): BaseConv(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU(inplace=True)
        )
      )
    )
  )
)
------------------------------
backbone.backbone
FBNetV2(
  (layers): ModuleList(
    (0): ConvBlock(
      (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (1): ConvBlock(
      (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (2): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (3): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (4): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (5): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvBlock(
          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (final_act): ReLU(inplace=True)
      )
    )
    (6): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (7): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (8): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (9): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvBlock(
          (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (final_act): ReLU(inplace=True)
      )
    )
    (10): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (11): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (12): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (13): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (14): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (se): SEModule(
          (squeeze): AdaptiveAvgPool2d(output_size=1)
          (excite): Sequential(
            (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU(inplace=True)
            (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (3): Sigmoid()
          )
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (15): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvBlock(
          (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (final_act): ReLU(inplace=True)
      )
    )
    (16): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
    (17): MixedOp(
      (ops): FBNetV2Block(
        (conv_bn_relu1): ConvBlock(
          (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu2): ConvBlock(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (conv_bn_relu3): ConvBlock(
          (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): Identity()
        (final_act): ReLU(inplace=True)
      )
    )
  )
)
------------------------------
backbone.backbone.layers
ModuleList(
  (0): ConvBlock(
    (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (1): ConvBlock(
    (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (2): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (3): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (4): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (5): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): ConvBlock(
        (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (final_act): ReLU(inplace=True)
    )
  )
  (6): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (7): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (8): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (9): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): ConvBlock(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (final_act): ReLU(inplace=True)
    )
  )
  (10): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (11): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (12): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (13): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (14): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (se): SEModule(
        (squeeze): AdaptiveAvgPool2d(output_size=1)
        (excite): Sequential(
          (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): ReLU(inplace=True)
          (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (3): Sigmoid()
        )
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (15): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): ConvBlock(
        (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (final_act): ReLU(inplace=True)
    )
  )
  (16): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
  (17): MixedOp(
    (ops): FBNetV2Block(
      (conv_bn_relu1): ConvBlock(
        (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu2): ConvBlock(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (conv_bn_relu3): ConvBlock(
        (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (downsample): Identity()
      (final_act): ReLU(inplace=True)
    )
  )
)
------------------------------
backbone.backbone.layers.0
ConvBlock(
  (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.0.conv
Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.0.bn
BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.0.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.1
ConvBlock(
  (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.1.conv
Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.2
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.2.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu3.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.2.ops.conv_bn_relu3.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.2.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.2.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.3
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.3.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu3.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.3.ops.conv_bn_relu3.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.3.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.3.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.4
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.4.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2, bias=False)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu3.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.4.ops.conv_bn_relu3.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.4.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.4.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.5
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): ConvBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.5.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): ConvBlock(
    (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu1.conv
Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu3.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.5.ops.conv_bn_relu3.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.5.ops.downsample
ConvBlock(
  (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.5.ops.downsample.conv
Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
------------------------------
backbone.backbone.layers.5.ops.downsample.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.5.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.6
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.6.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu3.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.6.ops.conv_bn_relu3.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.6.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.6.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.7
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.7.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu3.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.7.ops.conv_bn_relu3.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.7.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.7.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.8
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.8.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu3.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.8.ops.conv_bn_relu3.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.8.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.8.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.9
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): ConvBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.9.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): ConvBlock(
    (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu1.conv
Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.9.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.9.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.9.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.9.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.9.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.9.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.9.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.9.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.9.ops.downsample
ConvBlock(
  (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.9.ops.downsample.conv
Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
------------------------------
backbone.backbone.layers.9.ops.downsample.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.9.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.10
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.10.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.10.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.10.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.10.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.10.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.10.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.10.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.10.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.10.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.10.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.10.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.11
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.11.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.11.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.11.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.11.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.11.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.11.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.11.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.11.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.11.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.11.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.11.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.12
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.12.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.12.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.12.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.12.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.12.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.12.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.12.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.12.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.12.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.12.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.12.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.13
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.13.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.13.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.13.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.13.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.13.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.13.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.13.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.13.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.13.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.13.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.13.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.14
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (se): SEModule(
      (squeeze): AdaptiveAvgPool2d(output_size=1)
      (excite): Sequential(
        (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): ReLU(inplace=True)
        (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (3): Sigmoid()
      )
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.14.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (se): SEModule(
    (squeeze): AdaptiveAvgPool2d(output_size=1)
    (excite): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (1): ReLU(inplace=True)
      (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (3): Sigmoid()
    )
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu2.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.14.ops.se
SEModule(
  (squeeze): AdaptiveAvgPool2d(output_size=1)
  (excite): Sequential(
    (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (1): ReLU(inplace=True)
    (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): Sigmoid()
  )
)
------------------------------
backbone.backbone.layers.14.ops.se.squeeze
AdaptiveAvgPool2d(output_size=1)
------------------------------
backbone.backbone.layers.14.ops.se.excite
Sequential(
  (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (1): ReLU(inplace=True)
  (2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (3): Sigmoid()
)
------------------------------
backbone.backbone.layers.14.ops.se.excite.0
Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.14.ops.se.excite.1
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.14.ops.se.excite.2
Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.14.ops.se.excite.3
Sigmoid()
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.14.ops.conv_bn_relu3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.14.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.14.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.15
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): ConvBlock(
      (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.15.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): ConvBlock(
    (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
    (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu1.conv
Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu3.conv
Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.15.ops.conv_bn_relu3.bn
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.15.ops.downsample
ConvBlock(
  (conv): Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.15.ops.downsample.conv
Conv2d(256, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
------------------------------
backbone.backbone.layers.15.ops.downsample.bn
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.15.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.16
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.16.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu1.conv
Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu3.conv
Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.16.ops.conv_bn_relu3.bn
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.16.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.16.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.17
MixedOp(
  (ops): FBNetV2Block(
    (conv_bn_relu1): ConvBlock(
      (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu2): ConvBlock(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (conv_bn_relu3): ConvBlock(
      (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (downsample): Identity()
    (final_act): ReLU(inplace=True)
  )
)
------------------------------
backbone.backbone.layers.17.ops
FBNetV2Block(
  (conv_bn_relu1): ConvBlock(
    (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu2): ConvBlock(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): ReLU(inplace=True)
  )
  (conv_bn_relu3): ConvBlock(
    (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (downsample): Identity()
  (final_act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu1
ConvBlock(
  (conv): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu1.conv
Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu1.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu2
ConvBlock(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): ReLU(inplace=True)
)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu2.act
ReLU(inplace=True)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu3
ConvBlock(
  (conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu3.conv
Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.backbone.layers.17.ops.conv_bn_relu3.bn
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.backbone.layers.17.ops.downsample
Identity()
------------------------------
backbone.backbone.layers.17.ops.final_act
ReLU(inplace=True)
------------------------------
backbone.upsample
Upsample(scale_factor=2.0, mode=nearest)
------------------------------
backbone.lateral_conv0
BaseConv(
  (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.lateral_conv0.conv
Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.lateral_conv0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.lateral_conv0.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4
CSPLayer(
  (conv1): BaseConv(
    (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv3): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (m): Sequential(
    (0): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
)
------------------------------
backbone.C3_p4.conv1
BaseConv(
  (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.conv1.conv
Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.conv2
BaseConv(
  (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.conv2.conv
Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.conv3
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.conv3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.conv3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.conv3.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m
Sequential(
  (0): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
backbone.C3_p4.m.0
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p4.m.0.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.0.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.0.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.0.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m.0.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.0.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.0.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.0.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m.1
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p4.m.1.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.1.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.1.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.1.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m.1.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.1.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.1.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.1.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m.2
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p4.m.2.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.2.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.2.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.2.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p4.m.2.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p4.m.2.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p4.m.2.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p4.m.2.conv2.act
SiLU(inplace=True)
------------------------------
backbone.reduce_conv1
BaseConv(
  (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.reduce_conv1.conv
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.reduce_conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.reduce_conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3
CSPLayer(
  (conv1): BaseConv(
    (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv3): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (m): Sequential(
    (0): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
)
------------------------------
backbone.C3_p3.conv1
BaseConv(
  (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.conv1.conv
Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.conv1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.conv2
BaseConv(
  (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.conv2.conv
Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.conv2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.conv3
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.conv3.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.conv3.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.conv3.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m
Sequential(
  (0): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
backbone.C3_p3.m.0
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p3.m.0.conv1
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.0.conv1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.0.conv1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.0.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m.0.conv2
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.0.conv2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.0.conv2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.0.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m.1
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p3.m.1.conv1
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.1.conv1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.1.conv1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.1.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m.1.conv2
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.1.conv2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.1.conv2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.1.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m.2
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_p3.m.2.conv1
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.2.conv1.conv
Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.2.conv1.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.2.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_p3.m.2.conv2
BaseConv(
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_p3.m.2.conv2.conv
Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_p3.m.2.conv2.bn
BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_p3.m.2.conv2.act
SiLU(inplace=True)
------------------------------
backbone.bu_conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.bu_conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.bu_conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.bu_conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3
CSPLayer(
  (conv1): BaseConv(
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv3): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (m): Sequential(
    (0): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
)
------------------------------
backbone.C3_n3.conv1
BaseConv(
  (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.conv1.conv
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.conv2
BaseConv(
  (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.conv2.conv
Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.conv3
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.conv3.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.conv3.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.conv3.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m
Sequential(
  (0): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
backbone.C3_n3.m.0
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n3.m.0.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.0.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.0.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.0.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m.0.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.0.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.0.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.0.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m.1
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n3.m.1.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.1.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.1.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.1.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m.1.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.1.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.1.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.1.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m.2
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n3.m.2.conv1
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.2.conv1.conv
Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.2.conv1.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.2.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n3.m.2.conv2
BaseConv(
  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n3.m.2.conv2.conv
Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n3.m.2.conv2.bn
BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n3.m.2.conv2.act
SiLU(inplace=True)
------------------------------
backbone.bu_conv1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.bu_conv1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
------------------------------
backbone.bu_conv1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.bu_conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4
CSPLayer(
  (conv1): BaseConv(
    (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv3): BaseConv(
    (conv): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (m): Sequential(
    (0): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Bottleneck(
      (conv1): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (conv2): BaseConv(
        (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
)
------------------------------
backbone.C3_n4.conv1
BaseConv(
  (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.conv1.conv
Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.conv1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.conv2
BaseConv(
  (conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.conv2.conv
Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.conv2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.conv3
BaseConv(
  (conv): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.conv3.conv
Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.conv3.bn
BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.conv3.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m
Sequential(
  (0): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Bottleneck(
    (conv1): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (conv2): BaseConv(
      (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
backbone.C3_n4.m.0
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n4.m.0.conv1
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.0.conv1.conv
Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.0.conv1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.0.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m.0.conv2
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.0.conv2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.0.conv2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.0.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m.1
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n4.m.1.conv1
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.1.conv1.conv
Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.1.conv1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.1.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m.1.conv2
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.1.conv2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.1.conv2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.1.conv2.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m.2
Bottleneck(
  (conv1): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (conv2): BaseConv(
    (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
backbone.C3_n4.m.2.conv1
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.2.conv1.conv
Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.2.conv1.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.2.conv1.act
SiLU(inplace=True)
------------------------------
backbone.C3_n4.m.2.conv2
BaseConv(
  (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
backbone.C3_n4.m.2.conv2.conv
Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
backbone.C3_n4.m.2.conv2.bn
BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
backbone.C3_n4.m.2.conv2.act
SiLU(inplace=True)
------------------------------
head
YOLOXHead(
  (cls_convs): ModuleList(
    (0): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
  (reg_convs): ModuleList(
    (0): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (1): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (2): Sequential(
      (0): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): BaseConv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
  )
  (cls_preds): ModuleList(
    (0): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
    (1): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
    (2): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
  )
  (reg_preds): ModuleList(
    (0): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
    (1): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
    (2): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
  )
  (obj_preds): ModuleList(
    (0): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    (2): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (stems): ModuleList(
    (0): BaseConv(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (2): BaseConv(
      (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (l1_loss): L1Loss()
  (bcewithlog_loss): BCEWithLogitsLoss()
  (iou_loss): IOUloss()
)
------------------------------
head.cls_convs
ModuleList(
  (0): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
head.cls_convs.0
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.cls_convs.0.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.0.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.0.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.0.0.act
SiLU(inplace=True)
------------------------------
head.cls_convs.0.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.0.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.0.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.0.1.act
SiLU(inplace=True)
------------------------------
head.cls_convs.1
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.cls_convs.1.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.1.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.1.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.1.0.act
SiLU(inplace=True)
------------------------------
head.cls_convs.1.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.1.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.1.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.1.1.act
SiLU(inplace=True)
------------------------------
head.cls_convs.2
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.cls_convs.2.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.2.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.2.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.2.0.act
SiLU(inplace=True)
------------------------------
head.cls_convs.2.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.cls_convs.2.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.cls_convs.2.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.cls_convs.2.1.act
SiLU(inplace=True)
------------------------------
head.reg_convs
ModuleList(
  (0): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (1): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
  (2): Sequential(
    (0): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
    (1): BaseConv(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU(inplace=True)
    )
  )
)
------------------------------
head.reg_convs.0
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.reg_convs.0.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.0.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.0.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.0.0.act
SiLU(inplace=True)
------------------------------
head.reg_convs.0.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.0.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.0.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.0.1.act
SiLU(inplace=True)
------------------------------
head.reg_convs.1
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.reg_convs.1.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.1.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.1.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.1.0.act
SiLU(inplace=True)
------------------------------
head.reg_convs.1.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.1.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.1.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.1.1.act
SiLU(inplace=True)
------------------------------
head.reg_convs.2
Sequential(
  (0): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.reg_convs.2.0
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.2.0.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.2.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.2.0.act
SiLU(inplace=True)
------------------------------
head.reg_convs.2.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.reg_convs.2.1.conv
Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
------------------------------
head.reg_convs.2.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.reg_convs.2.1.act
SiLU(inplace=True)
------------------------------
head.cls_preds
ModuleList(
  (0): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
  (1): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
  (2): Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
)
------------------------------
head.cls_preds.0
Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.cls_preds.1
Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.cls_preds.2
Conv2d(256, 6, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.reg_preds
ModuleList(
  (0): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
  (1): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
  (2): Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
)
------------------------------
head.reg_preds.0
Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.reg_preds.1
Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.reg_preds.2
Conv2d(256, 4, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.obj_preds
ModuleList(
  (0): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
  (1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
  (2): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
)
------------------------------
head.obj_preds.0
Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.obj_preds.1
Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.obj_preds.2
Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
------------------------------
head.stems
ModuleList(
  (0): BaseConv(
    (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (1): BaseConv(
    (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
  (2): BaseConv(
    (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (act): SiLU(inplace=True)
  )
)
------------------------------
head.stems.0
BaseConv(
  (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.stems.0.conv
Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
head.stems.0.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.stems.0.act
SiLU(inplace=True)
------------------------------
head.stems.1
BaseConv(
  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.stems.1.conv
Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
head.stems.1.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.stems.1.act
SiLU(inplace=True)
------------------------------
head.stems.2
BaseConv(
  (conv): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (act): SiLU(inplace=True)
)
------------------------------
head.stems.2.conv
Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
------------------------------
head.stems.2.bn
BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
------------------------------
head.stems.2.act
SiLU(inplace=True)
------------------------------
head.l1_loss
L1Loss()
------------------------------
head.bcewithlog_loss
BCEWithLogitsLoss()
------------------------------
head.iou_loss
IOUloss()
------------------------------
torch.Size([4, 3549, 11])
